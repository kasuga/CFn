AWSTemplateFormatVersion: '2010-09-09'
Description: Creates ALB

Parameters:
  # Scope of project
  EnvType:
    Description: Environment type.
    Default: dev
    Type: String
    AllowedValues:
      - test
      - dev
      - prd
    ConstraintDescription: must specify dev or mnt or prd.
  # Project ID Config
  ProjectId:
    Description: Project name id.
    Type: String
    MinLength: '0'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must specify Project id.
  # Set Created VPC
  VPC:
    Description: Set VPC.
    Type: AWS::EC2::VPC::Id
  # Set ALB Subnet1
  ALBSubnet1:
    Description: The subnets to place ALB.
    Type: AWS::EC2::Subnet::Id
  # Set ALB Subnet2
  ALBSubnet2:
    Description: The subnets to place ALB.
    Type: AWS::EC2::Subnet::Id
  # Set ALB EC2 instance
  EC2Balancing1:
    Description:  The Balancing EC2 instance
    Type: AWS::EC2::Instance::Id
  EC2Balancing2:
    Description:  The Balancing EC2 instance
    Type: AWS::EC2::Instance::Id
  # Set ALB Security Group
  ALBSecurityGroup:
    Description: The Security Group to place ALB
    Type: AWS::EC2::SecurityGroup::Id
  # Create Origin Certificate Name
  OriginCertificateName:
    NoEcho: true
    Description: The certificate name for SSL compliance
    Type: String
    MinLength: '3'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must specify Origin Certificate name

Resources:
  #Create ALB TargetGroup
  ALBTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: 200
      Name: TestALB
      Port: 443
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: !Join ['-', ['Ref':'EnvType', 'Ref':'ProjectId', TestALB]]
      Targets:
        - Id: !Ref EC2Balancing1
          Port: 80
        - Id: !Ref EC2Balancing2
          Port: 80
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPC

  # Create ALB
  ALB:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Name: TestALB
      # Select internet-facing or internal
      Scheme: internet-facing
      SecurityGroups:
        - !Ref  ALBSecurityGroup
      Subnets:
         - !Ref ALBSubnet1
         - !Ref ALBSubnet2
      Tags:
        - Key: Name
          Value: !Join ['-', ['Ref':'EnvType', 'Ref':'ProjectId',TestALB] ]
      Type: application
      IpAddressType: ipv4

  # Create ALB Listener
  ALBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
        Certificates:
          CertificateArn: !Ref OriginCertificateName
        DefaultActions:
          - Type: forward
            TargetGroupArn: !Ref ALBTargetGroup
        LoadBalancerArn:  !Ref ALB
        Port: 443
        Protocol: HTTPS